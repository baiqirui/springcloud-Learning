#spring.datasource.url=jdbc:mysql://112.74.66.12:3306/dev2_mealtime?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
#spring.datasource.username=dev_mealtime
#spring.datasource.password=dev_mealtime
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#mybatis: 
#  mapperLocations: classpath:mapper/*.xml
#mybatis.config=mybatis-config.xml 
#appname表示注册到eureka的实际名称，如果未配置则默认使用spring.application.name，如果spring.application.name也没配置，则默认名称：UNKOWN
eureka.instance.appname=compute-service1
#hostname可以理解为eureka的主机域名，因此该配置项一般是在eureka-server端用到
#eureka.instance.hostname=peer1

spring.application.name=compute-service1

server.port=2226

#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#从eureka服务器获取 注册表信息的 间隔频率(默认30s)
#eureka.client.registry-fetch-interval-seconds=50
#eureka服务器的注册地址(是一个Map结构，多个服务器地址以逗号分隔)
#eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/ , http://120.76.195.184:1111/eureka/
#eureka.client.serviceUrl.defaultZone=http://120.76.195.184:1111/eureka/
#
#eureka.client.eureka-service-url-poll-interval-seconds=
#leaseExpirationDurationInSeconds，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，
#在这个时间内若没收到下一次心跳，则将移除该instance。
#这个配置的值由eureka client分配给eureka server(这样做能够保证对于每个不同client, eureka server 都可以有不同的心态检测时间)
#默认为90秒
#如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#该值至少应该大于leaseRenewalIntervalInSeconds
eureka.instance.lease-expiration-duration-in-seconds = 100
#ssl
#server.port = 8443
#server.ssl.key-store = .keystore
#server.ssl.key-store-password= baiqirui
#server.ssl.keyStoreType= JKS
#server.ssl.keyAlias: tomcat

